{"version":3,"sources":["Header.js","Card.js","App.js","serviceWorker.js","reducers/ListMoviesReducers.js","reducers/DisplayReducers.js","reducers/nameReducers.js","reducers/imgReducers.js","reducers/ratingReducers.js","reducers/IdReducer.js","store.js","index.js"],"names":["Header","add","name","props","nameReducers","img","imgReducers","rating","ratingReducers","ADD_MOVIE","className","type","placeholder","onChange","e","setState","search","target","value","onClick","star","this","DisplayReducers","CHANGE_NAME","CHANGE_IMG","CHANGE_Rating","to","Component","connect","ListMoviesReducers","dispatch","ratingAdd","nameAdd","Card","movies","filter","el","toLowerCase","map","padEnd","src","edit","id","more","state","movie","prompt","NewMovie","concat","setTimeout","history","push","App","exact","path","render","component","Boolean","window","location","hostname","match","movielist","listMoviesReducers","action","Math","random","displayReducers","IdReducer","store","createStore","combineReducers","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aa83310e.chunk.js","sourcesContent":["import {connect} from 'react-redux';\r\nimport React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport './App.css';\r\nclass Header extends Component {\r\n\r\n  add=()=> {\r\n\r\n    let name=this.props.nameReducers;\r\nlet img=this.props.imgReducers ;\r\nlet rating=this.props.ratingReducers\r\n\r\n\r\n    this.props.ADD_MOVIE(rating,name,img)\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n   render() {\r\n    return (\r\n    <div className=\"movie-app\">\r\n      <header className=\"header\">\r\n        <input type='text' placeholder=\"Search\" onChange={(e) => this.setState({ search: e.target.value })} />\r\n        <span onClick ={()=>this.star(1)}>⭐</span>\r\n        <span onClick ={()=>this.star(2)}>⭐</span>\r\n        <span onClick ={()=>this.star(3)}>⭐</span>\r\n        <span onClick ={()=>this.star(4)}>⭐</span>\r\n        <span onClick ={()=>this.star(5)}>⭐</span>\r\n       </header>\r\n     {/* <Card input ={this.state.search} star = {this.state.star} movies = {this.state.movielist} />\r\n  \r\n */}\r\n{/* <p className=\"plus\" onClick ={()=>this.setState({display:!this.state.display})}>+</p> */}\r\n    { /*</div>* <div className ={this.state.display ? \"display\":\"hidden\"}>\r\n       */}\r\n       \r\n      <div className ={this.props.DisplayReducers}>\r\n       \r\n        <input type=\"text\" placeholder=\"name\" name=\"name\" onChange={(e)=>this.props.CHANGE_NAME(e)} />\r\n        <input type=\"text\" placeholder=\"Img\" name=\"img\" onChange={(e)=>this.props.CHANGE_IMG(e)} />\r\n        <input type=\"text\" placeholder=\"rating\" name=\"rating\" onChange={(e)=>this.props.CHANGE_Rating(e)} />\r\n        <button onClick={this.add}>Add</button>\r\n       <Link to=\"/Movies\">\r\n        TO CARD\r\n       </Link>\r\n\r\n        \r\n      </div>\r\n   \r\n\r\n    </div>);\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n  ADD_MOVIE:(ratingAdd,nameAdd,img)=>{\r\n      dispatch({type:'add-Movie',ratingAdd:ratingAdd,nameAdd:nameAdd,img:img})\r\n    },\r\n    CHANGE_NAME:(e)=>{\r\n      dispatch({type:'CHANGE_NAME',value:e.target.value})\r\n    },\r\n    CHANGE_IMG:(e)=>{\r\n      dispatch({type:'CHANGE_IMG',value:e.target.value})\r\n    },\r\n    CHANGE_Rating:(e)=>{\r\n      dispatch({type:'CHANGE_Rating',value:e.target.value})\r\n    }\r\n\r\n   \r\n  \r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\nconst mapStateToProps = ({ListMoviesReducers,DisplayReducers,nameReducers,imgReducers,ratingReducers}) => {\r\n return {\r\n  ListMoviesReducers:ListMoviesReducers,\r\n  DisplayReducers:DisplayReducers,\r\n  nameReducers:nameReducers,\r\nimgReducers:imgReducers,\r\nratingReducers:ratingReducers\r\n   }\r\n }\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Header)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Card extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n\r\n                {       /*    {this.props.movies && this.props.movies.filter(el => el.name.toLowerCase().includes(this.props.input.toLowerCase().trim()) && el.rating <= this.props.star).map(el => {\r\n        \r\n        */}\r\n\r\n\r\n                {this.props.movies && this.props.movies.filter(el => el.name.toLowerCase()).map(el => {\r\n\r\n\r\n                    return (\r\n                        <div className=\"movie-card\">\r\n                            <p className=\"movie-name\">{el.name}</p>\r\n                            <p className=\"movie-rating\">{\"\".padEnd(el.rating, \"⭐\")}</p>\r\n                            <img className=\"movie-img\" src={el.img} />\r\n                            <button onClick={() => {this.props.edit(el.id, this.props.movies) }}>Edit</button>\r\n                            <span onClick={() => {this.props.more(el.id, this.props) }}>More</span>\r\n\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>);\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        edit: (id, movie) => {\r\n   \r\n            let name = prompt(\"name\")\r\n            let rating = prompt(\"rating\")\r\n            let img = prompt(\"img\")\r\n          \r\n      \r\n            let NewMovie=movie.filter(el=>el.id!==id).concat({name:name,img:img,rating:rating})\r\n        dispatch({type:\"EDIT_MOVIE\",value:NewMovie})\r\n    \r\n        \r\n        },\r\n\r\n        more: (id, props) => {\r\n            dispatch({ type: 'GET_ID', id: id })\r\n            setTimeout(() => { props.history.push(\"/description\") }, 1500)\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps=(state) => {\r\n    return {\r\n        movies:state.ListMoviesReducers\r\n    }\r\n  \r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\r\n\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, } from \"react-router-dom\";\nimport './App.css'\nimport Header from './Header';\nimport Card from './Card';\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {  }\n  }\n  render() { \n    return (<div>\n      <Router>\n        <Route  exact path=\"/\" render={()=><Header/>}/>\n \n        <Route  path=\"/Movies\" component={Card}/>\n \n      </Router>\n     \n    </div>);\n  }\n}\n \nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\n\r\nconst movielist= [\r\n  \r\n  \r\n  {id:\"\",rating:2,name:\"Abc\",img:\"https://maghreb.space/P622948/8f5a07bebb4d94ba59bceaf7f0690c46/___www_maghrebspace_net__12082014173148_262Afifa%20iskandar.jpg\"},\r\n  {id:\"\",rating:2,name:\"Abc\",img:\"https://maghreb.space/P622948/8f5a07bebb4d94ba59bceaf7f0690c46/___www_maghrebspace_net__12082014173148_262Afifa%20iskandar.jpg\"},\r\n\r\n\r\n\r\n\r\n]\r\n\r\n\r\nconst listMoviesReducers=(state=movielist,action)=>{\r\n  if (action.type===\"add-Movie\")\r\n{    \r\n  return [...state,{id:Math.random(),rating:action.ratingAdd,name:action.nameAdd,img:action.img}]\r\n}\r\nelse if(action.type===\"EDIT_MOVIE\"){\r\n  return action.value\r\n}\r\nreturn state\r\n\r\n}\r\n\r\n\r\n\r\nexport default listMoviesReducers","\r\n\r\nconst displayReducers=(state=\"display\",action)=>{\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nreturn state\r\n}\r\n\r\n\r\nexport default displayReducers","const nameReducers=(state='',action)=>{\n\n    if(action.type==='CHANGE_NAME')\n    {return state=action.value}\n    \n    return state\n    \n    \n    }\n    export default nameReducers","const imgReducers=(state='',action)=>{\n\n    if(action.type==='CHANGE_IMG')\n    {return state=action.value}\n    \n    return state\n    \n    \n    }\n    export default imgReducers","const ratingReducers=(state='',action)=>{\n\n    if(action.type==='CHANGE_Rating')\n    {return state=action.value}\n    \n    return state\n    \n    \n    }\n    export default ratingReducers","const IdReducer =(state=\"\",action)=>{\r\n    if(action.type===\"GET_ID\"){\r\n        return action.id\r\n    }\r\n    return state\r\n\r\n}\r\nexport default  IdReducer","import {createStore,combineReducers} from \"redux\";\r\nimport ListMoviesReducers  from './reducers/ListMoviesReducers';\r\nimport DisplayReducers  from './reducers/DisplayReducers';\r\n\r\nimport nameReducers  from './reducers/nameReducers';\r\nimport imgReducers  from './reducers/imgReducers';\r\nimport ratingReducers  from './reducers/ratingReducers';\r\nimport IdReducer from './reducers/IdReducer'\r\n\r\n\r\n\r\n\r\nconst store=createStore(combineReducers({\r\nListMoviesReducers:ListMoviesReducers,\r\nDisplayReducers:DisplayReducers,\r\nnameReducers:nameReducers,\r\nimgReducers:imgReducers,\r\nratingReducers:ratingReducers,\r\nid:IdReducer\r\n\r\n})\r\n)\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter} from \"react-router-dom\";\n\nimport{Provider} from 'react-redux';\nimport store from \"./store\";\nReactDOM.render(<BrowserRouter><Provider store ={store}> <App /></Provider></BrowserRouter>, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}